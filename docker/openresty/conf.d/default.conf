# nginx.vh.default.conf  --  docker-openresty
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
#
# This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
# default by the `include` directive in `/usr/local/openresty/nginx/conf/nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

server {
    listen      80;
    server_name localhost;
    return 301  https://$host$request_uri;
}

server {
    resolver 127.0.0.1;

    listen 443 ssl;
    server_name  localhost;

    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    access_by_lua_block {
      local uri = ngx.var.request_uri
      local ua = ngx.req.get_headers()['User-Agent']
      if uri ~= nil and string.match(uri, "update_projects_json%.php$") ~= nil and ua ~= nil and string.match(ua, "GitLab/%d+%.%d+%.?%d*$") ~= nil then
        return
      end
      local opts = {
        ssl_verify = "no",
        scope = "openid email",
        session_contents = {id_token=true},
        use_pkce = true,
        redirect_uri = "https://localhost/oidc_callback",
        discovery = "https://gitlab.itccorporation.jp/.well-known/openid-configuration",
        client_id = "3e107902f8414be52b6061436a2a558db1251e5dcbdde7bab98f32583ac0c5f6",
        client_secret = "ea3adfe0b4df489660da7625a391c66e74cbee625780768b16272307e397175d",
      }
      local res, err = require("resty.openidc").authenticate(opts)

      if err then
        ngx.status = 500
        ngx.say(err)
        ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
      end

      ngx.req.set_header("X-USER", res.id_token.email)
    }

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /opt/gitlab-download-app/www/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        #root           /usr/local/openresty/nginx/html;
        root   /opt/gitlab-download-app/www/html;
        #fastcgi_pass   127.0.0.1:9000;
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
